
led_blinking.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000020c  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000394  0800039c  0001039c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000394  08000394  0001039c  2**0
                  CONTENTS
  4 .ARM          00000000  08000394  08000394  0001039c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000394  0800039c  0001039c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000394  08000394  00010394  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000398  08000398  00010398  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001039c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0001039c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0001039c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  000103c6  2**0
                  CONTENTS, READONLY
 14 .debug_info   000000da  00000000  00000000  00010409  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000082  00000000  00000000  000104e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000048  00000000  00000000  00010568  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 0000002d  00000000  00000000  000105b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00000f95  00000000  00000000  000105dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000437  00000000  00000000  00011572  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00003c9a  00000000  00000000  000119a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  00000058  00000000  00000000  00015644  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000059  00000000  00000000  0001569c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	0800037c 	.word	0x0800037c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	0800037c 	.word	0x0800037c

080001c8 <main>:
#include "gpio.h"



int main(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	// Initialization
	AHB1_ENR |= (1<<1); // GPIOBLP_ENR
 80001ce:	4b3e      	ldr	r3, [pc, #248]	; (80002c8 <main+0x100>)
 80001d0:	681b      	ldr	r3, [r3, #0]
 80001d2:	4a3d      	ldr	r2, [pc, #244]	; (80002c8 <main+0x100>)
 80001d4:	f043 0302 	orr.w	r3, r3, #2
 80001d8:	6013      	str	r3, [r2, #0]
	AHB1_ENR |= (1<<2); // GPIOCLP_ENR
 80001da:	4b3b      	ldr	r3, [pc, #236]	; (80002c8 <main+0x100>)
 80001dc:	681b      	ldr	r3, [r3, #0]
 80001de:	4a3a      	ldr	r2, [pc, #232]	; (80002c8 <main+0x100>)
 80001e0:	f043 0304 	orr.w	r3, r3, #4
 80001e4:	6013      	str	r3, [r2, #0]

	//Clear the GPIOB MODER Register
	GPIOB_MODER &= ~(3<<26); // 13th PIN so MODER13
 80001e6:	4b39      	ldr	r3, [pc, #228]	; (80002cc <main+0x104>)
 80001e8:	681b      	ldr	r3, [r3, #0]
 80001ea:	4a38      	ldr	r2, [pc, #224]	; (80002cc <main+0x104>)
 80001ec:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 80001f0:	6013      	str	r3, [r2, #0]
    GPIOB_MODER &= ~(3<<28); //14th PIN so MODER 14
 80001f2:	4b36      	ldr	r3, [pc, #216]	; (80002cc <main+0x104>)
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	4a35      	ldr	r2, [pc, #212]	; (80002cc <main+0x104>)
 80001f8:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 80001fc:	6013      	str	r3, [r2, #0]
    GPIOB_MODER &= ~(3<<30); //15th PIN so MODER 15
 80001fe:	4b33      	ldr	r3, [pc, #204]	; (80002cc <main+0x104>)
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	4a32      	ldr	r2, [pc, #200]	; (80002cc <main+0x104>)
 8000204:	f023 4340 	bic.w	r3, r3, #3221225472	; 0xc0000000
 8000208:	6013      	str	r3, [r2, #0]
    GPIOC_MODER &= ~(3<<12); //6th PIN so MODER 6
 800020a:	4b31      	ldr	r3, [pc, #196]	; (80002d0 <main+0x108>)
 800020c:	681b      	ldr	r3, [r3, #0]
 800020e:	4a30      	ldr	r2, [pc, #192]	; (80002d0 <main+0x108>)
 8000210:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000214:	6013      	str	r3, [r2, #0]
    //Buzzer
    // GPIOC_MODER &= ~(3<<18); // Buzzer using PC9

	//Set the GPIOB MODER Register
	GPIOB_MODER |= (1<<26);
 8000216:	4b2d      	ldr	r3, [pc, #180]	; (80002cc <main+0x104>)
 8000218:	681b      	ldr	r3, [r3, #0]
 800021a:	4a2c      	ldr	r2, [pc, #176]	; (80002cc <main+0x104>)
 800021c:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000220:	6013      	str	r3, [r2, #0]
	GPIOB_MODER |= (1<<28);
 8000222:	4b2a      	ldr	r3, [pc, #168]	; (80002cc <main+0x104>)
 8000224:	681b      	ldr	r3, [r3, #0]
 8000226:	4a29      	ldr	r2, [pc, #164]	; (80002cc <main+0x104>)
 8000228:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800022c:	6013      	str	r3, [r2, #0]
	GPIOB_MODER |= (1<<30);
 800022e:	4b27      	ldr	r3, [pc, #156]	; (80002cc <main+0x104>)
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	4a26      	ldr	r2, [pc, #152]	; (80002cc <main+0x104>)
 8000234:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8000238:	6013      	str	r3, [r2, #0]
	GPIOC_MODER |= (1<<12);
 800023a:	4b25      	ldr	r3, [pc, #148]	; (80002d0 <main+0x108>)
 800023c:	681b      	ldr	r3, [r3, #0]
 800023e:	4a24      	ldr	r2, [pc, #144]	; (80002d0 <main+0x108>)
 8000240:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000244:	6013      	str	r3, [r2, #0]
	// Buzzer
	// GPIOC_MODER |= (1<<18);


	GPIOB_ODR &= ~(1<<13); // 13th PIN Led OFF
 8000246:	4b23      	ldr	r3, [pc, #140]	; (80002d4 <main+0x10c>)
 8000248:	681b      	ldr	r3, [r3, #0]
 800024a:	4a22      	ldr	r2, [pc, #136]	; (80002d4 <main+0x10c>)
 800024c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000250:	6013      	str	r3, [r2, #0]
	GPIOB_ODR &= ~(1<<14);  // 14th PIN Led OFF
 8000252:	4b20      	ldr	r3, [pc, #128]	; (80002d4 <main+0x10c>)
 8000254:	681b      	ldr	r3, [r3, #0]
 8000256:	4a1f      	ldr	r2, [pc, #124]	; (80002d4 <main+0x10c>)
 8000258:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800025c:	6013      	str	r3, [r2, #0]
	GPIOB_ODR &= ~(1<<15);  //15th PIN Led OFF
 800025e:	4b1d      	ldr	r3, [pc, #116]	; (80002d4 <main+0x10c>)
 8000260:	681b      	ldr	r3, [r3, #0]
 8000262:	4a1c      	ldr	r2, [pc, #112]	; (80002d4 <main+0x10c>)
 8000264:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000268:	6013      	str	r3, [r2, #0]
    GPIOC_ODR &= ~(1<<6);
 800026a:	4b1b      	ldr	r3, [pc, #108]	; (80002d8 <main+0x110>)
 800026c:	681b      	ldr	r3, [r3, #0]
 800026e:	4a1a      	ldr	r2, [pc, #104]	; (80002d8 <main+0x110>)
 8000270:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000274:	6013      	str	r3, [r2, #0]
    // Buzzer MODER.
   // GPIOC_ODR &= ~(1<<9);

	/* Loop forever */
	for(;;){
		GPIOB_ODR ^= (1<<13);
 8000276:	4b17      	ldr	r3, [pc, #92]	; (80002d4 <main+0x10c>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	4a16      	ldr	r2, [pc, #88]	; (80002d4 <main+0x10c>)
 800027c:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 8000280:	6013      	str	r3, [r2, #0]
        GPIOB_ODR ^= (1<<14);
 8000282:	4b14      	ldr	r3, [pc, #80]	; (80002d4 <main+0x10c>)
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	4a13      	ldr	r2, [pc, #76]	; (80002d4 <main+0x10c>)
 8000288:	f483 4380 	eor.w	r3, r3, #16384	; 0x4000
 800028c:	6013      	str	r3, [r2, #0]
        GPIOB_ODR ^= (1<<15);
 800028e:	4b11      	ldr	r3, [pc, #68]	; (80002d4 <main+0x10c>)
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	4a10      	ldr	r2, [pc, #64]	; (80002d4 <main+0x10c>)
 8000294:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 8000298:	6013      	str	r3, [r2, #0]
        GPIOC_ODR ^= (1<<6);
 800029a:	4b0f      	ldr	r3, [pc, #60]	; (80002d8 <main+0x110>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	4a0e      	ldr	r2, [pc, #56]	; (80002d8 <main+0x110>)
 80002a0:	f083 0340 	eor.w	r3, r3, #64	; 0x40
 80002a4:	6013      	str	r3, [r2, #0]
        //
        GPIOC_ODR ^= (1<<9);
 80002a6:	4b0c      	ldr	r3, [pc, #48]	; (80002d8 <main+0x110>)
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	4a0b      	ldr	r2, [pc, #44]	; (80002d8 <main+0x110>)
 80002ac:	f483 7300 	eor.w	r3, r3, #512	; 0x200
 80002b0:	6013      	str	r3, [r2, #0]
		//Random Delay
		for(uint32_t x=0;x<100000;x++);
 80002b2:	2300      	movs	r3, #0
 80002b4:	607b      	str	r3, [r7, #4]
 80002b6:	e002      	b.n	80002be <main+0xf6>
 80002b8:	687b      	ldr	r3, [r7, #4]
 80002ba:	3301      	adds	r3, #1
 80002bc:	607b      	str	r3, [r7, #4]
 80002be:	687b      	ldr	r3, [r7, #4]
 80002c0:	4a06      	ldr	r2, [pc, #24]	; (80002dc <main+0x114>)
 80002c2:	4293      	cmp	r3, r2
 80002c4:	d9f8      	bls.n	80002b8 <main+0xf0>
		GPIOB_ODR ^= (1<<13);
 80002c6:	e7d6      	b.n	8000276 <main+0xae>
 80002c8:	40023830 	.word	0x40023830
 80002cc:	40020400 	.word	0x40020400
 80002d0:	40020800 	.word	0x40020800
 80002d4:	40020414 	.word	0x40020414
 80002d8:	40020814 	.word	0x40020814
 80002dc:	0001869f 	.word	0x0001869f

080002e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002e0:	480d      	ldr	r0, [pc, #52]	; (8000318 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002e2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002e4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002e8:	480c      	ldr	r0, [pc, #48]	; (800031c <LoopForever+0x6>)
  ldr r1, =_edata
 80002ea:	490d      	ldr	r1, [pc, #52]	; (8000320 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002ec:	4a0d      	ldr	r2, [pc, #52]	; (8000324 <LoopForever+0xe>)
  movs r3, #0
 80002ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002f0:	e002      	b.n	80002f8 <LoopCopyDataInit>

080002f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002f6:	3304      	adds	r3, #4

080002f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002fc:	d3f9      	bcc.n	80002f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002fe:	4a0a      	ldr	r2, [pc, #40]	; (8000328 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000300:	4c0a      	ldr	r4, [pc, #40]	; (800032c <LoopForever+0x16>)
  movs r3, #0
 8000302:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000304:	e001      	b.n	800030a <LoopFillZerobss>

08000306 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000306:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000308:	3204      	adds	r2, #4

0800030a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800030a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800030c:	d3fb      	bcc.n	8000306 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800030e:	f000 f811 	bl	8000334 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000312:	f7ff ff59 	bl	80001c8 <main>

08000316 <LoopForever>:

LoopForever:
  b LoopForever
 8000316:	e7fe      	b.n	8000316 <LoopForever>
  ldr   r0, =_estack
 8000318:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800031c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000320:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000324:	0800039c 	.word	0x0800039c
  ldr r2, =_sbss
 8000328:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800032c:	2000001c 	.word	0x2000001c

08000330 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000330:	e7fe      	b.n	8000330 <ADC_IRQHandler>
	...

08000334 <__libc_init_array>:
 8000334:	b570      	push	{r4, r5, r6, lr}
 8000336:	4d0d      	ldr	r5, [pc, #52]	; (800036c <__libc_init_array+0x38>)
 8000338:	4c0d      	ldr	r4, [pc, #52]	; (8000370 <__libc_init_array+0x3c>)
 800033a:	1b64      	subs	r4, r4, r5
 800033c:	10a4      	asrs	r4, r4, #2
 800033e:	2600      	movs	r6, #0
 8000340:	42a6      	cmp	r6, r4
 8000342:	d109      	bne.n	8000358 <__libc_init_array+0x24>
 8000344:	4d0b      	ldr	r5, [pc, #44]	; (8000374 <__libc_init_array+0x40>)
 8000346:	4c0c      	ldr	r4, [pc, #48]	; (8000378 <__libc_init_array+0x44>)
 8000348:	f000 f818 	bl	800037c <_init>
 800034c:	1b64      	subs	r4, r4, r5
 800034e:	10a4      	asrs	r4, r4, #2
 8000350:	2600      	movs	r6, #0
 8000352:	42a6      	cmp	r6, r4
 8000354:	d105      	bne.n	8000362 <__libc_init_array+0x2e>
 8000356:	bd70      	pop	{r4, r5, r6, pc}
 8000358:	f855 3b04 	ldr.w	r3, [r5], #4
 800035c:	4798      	blx	r3
 800035e:	3601      	adds	r6, #1
 8000360:	e7ee      	b.n	8000340 <__libc_init_array+0xc>
 8000362:	f855 3b04 	ldr.w	r3, [r5], #4
 8000366:	4798      	blx	r3
 8000368:	3601      	adds	r6, #1
 800036a:	e7f2      	b.n	8000352 <__libc_init_array+0x1e>
 800036c:	08000394 	.word	0x08000394
 8000370:	08000394 	.word	0x08000394
 8000374:	08000394 	.word	0x08000394
 8000378:	08000398 	.word	0x08000398

0800037c <_init>:
 800037c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800037e:	bf00      	nop
 8000380:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000382:	bc08      	pop	{r3}
 8000384:	469e      	mov	lr, r3
 8000386:	4770      	bx	lr

08000388 <_fini>:
 8000388:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800038a:	bf00      	nop
 800038c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800038e:	bc08      	pop	{r3}
 8000390:	469e      	mov	lr, r3
 8000392:	4770      	bx	lr
